CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
IF(COMMAND CMAKE_POLICY)
  CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND CMAKE_POLICY)

PROJECT(TOGL)

SET(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH};${TOGL_SOURCE_DIR}/CMake")

# Make sure the OpenGL slate is clean, in case
# we're switching from X11 to Aqua
SET(OPENGL_FOUND "")
SET(OPENGL_INCLUDE_DIR_GL "NOTFOUND")
SET(OPENGL_INCLUDE_DIR_GLX "NOTFOUND")
SET(OPENGL_glu_LIBRARY "NOTFOUND")
SET(OPENGL_gl_LIBRARY "NOTFOUND")
SET(OPENGL_xmesa_LIBRARY "NOTFOUND")
SET(OPENGL_xmesa_INCLUDE_DIR "NOTFOUND")
IF(TK_SYSTEM_GRAPHICS MATCHES "aqua")
	SET(OPENGL_USE_AQUA ON CACHE BOOL "Using aqua" FORCE)
	find_library(OPENGL_FRAMEWORK OpenGL)
	MARK_AS_ADVANCED(OPENGL_FRAMEWORK)
	find_library(APPLICATIONSERVICES_FRAMEWORK ApplicationServices)
	MARK_AS_ADVANCED(APPLICATIONSERVICES_FRAMEWORK )
ELSE(TK_SYSTEM_GRAPHICS MATCHES "aqua")
	SET(OPENGL_FRAMEWORK "")
	SET(APPLICATIONSERVICES_FRAMEWORK "")
	SET(OPENGL_USE_AQUA OFF CACHE BOOL "Not using aqua" FORCE)
ENDIF(TK_SYSTEM_GRAPHICS MATCHES "aqua")
find_package(GL)
IF(NOT TCL_LIBRARY OR NOT TCL_STUB_LIBRARY OR NOT TK_LIBRARY OR NOT
		    TK_STUB_LIBRARY OR NOT TCL_INCLUDE_DIRS OR NOT TK_INCLUDE_PATH OR
			 NOT TCL_TCLSH OR NOT TCL_WISH_EXECUTABLE)
find_package(TCL)
ENDIF(NOT TCL_LIBRARY OR NOT TCL_STUB_LIBRARY OR NOT TK_LIBRARY OR NOT
		    TK_STUB_LIBRARY OR NOT TCL_INCLUDE_DIRS OR NOT TK_INCLUDE_PATH OR
			 NOT TCL_TCLSH OR NOT TCL_WISH_EXECUTABLE)

IF(NOT LIB_DIR)
  SET(LIB_DIR lib)
ENDIF(NOT LIB_DIR)

# If we have only a target and not a full working exec, it's up to
# a parent CMake system to define TK_SYSTEM_GRAPHICS
IF(NOT TARGET ${TCL_WISH_EXECUTABLE})
  IF(NOT TK_GRAPHICS_SYSTEM)
    TK_GRAPHICS_SYSTEM(${TCL_WISH_EXECUTABLE} TK_SYSTEM_GRAPHICS)
  ENDIF(NOT TK_GRAPHICS_SYSTEM)
ENDIF(NOT TARGET ${TCL_WISH_EXECUTABLE})
IF(TK_SYSTEM_GRAPHICS MATCHES "x11")
  SET(TOGL_WINDOWINGSYSTEM "TOGL_X11")
  IF(APPLE)
    add_definitions(-DGLEW_APPLE_GLX)
  ENDIF(APPLE)
	find_package(X11)
ENDIF(TK_SYSTEM_GRAPHICS MATCHES "x11")
IF(TK_SYSTEM_GRAPHICS MATCHES "aqua")
	SET(TOGL_WINDOWINGSYSTEM "TOGL_NSOPENGL")
	add_definitions(-DUNICODE)
	add_definitions(-DMAC_OSX_TK=1)
	SET(X11_LIBRARIES "")
ENDIF(TK_SYSTEM_GRAPHICS MATCHES "aqua")
IF(TK_SYSTEM_GRAPHICS MATCHES "win32")
  SET(TOGL_WINDOWINGSYSTEM "TOGL_WGL")
ENDIF(TK_SYSTEM_GRAPHICS MATCHES "win32")
# If we can't run Tk for whatever reason, do a
# best guess
IF(NOT TK_SYSTEM_GRAPHICS)
  IF(WIN32)
    SET(TOGL_WINDOWINGSYSTEM "TOGL_WGL")
  ELSE(WIN32)
    SET(TOGL_WINDOWINGSYSTEM "TOGL_X11")
  ENDIF(WIN32)
ENDIF(NOT TK_SYSTEM_GRAPHICS)

# System checks
INCLUDE(CheckFunctions)
add_definitions(-DSTDC_HEADERS=1)
CHECK_INCLUDE_FILE(sys/types.h HAVE_SYS_TYPES_H)
CHECK_INCLUDE_FILE(sys/stat.h HAVE_SYS_STAT_H)
CHECK_INCLUDE_FILE(stdlib.h HAVE_STDLIB_H)
CHECK_INCLUDE_FILE(memory.h HAVE_MEMORY_H)
CHECK_INCLUDE_FILE(string.h HAVE_STRING_H)
CHECK_INCLUDE_FILE(strings.h HAVE_STRINGS_H)
CHECK_INCLUDE_FILE(inttypes.h HAVE_INTTYPES_H)
CHECK_INCLUDE_FILE(stdint.h HAVE_STDINT_H)
CHECK_INCLUDE_FILE(stddef.h HAVE_STDDEF_H)
CHECK_INCLUDE_FILE(unistd.h HAVE_UNISTD_H)
CHECK_INCLUDE_FILE(limits.h HAVE_LIMITS_H)
CHECK_INCLUDE_FILE(sys/param.h HAVE_SYS_PARAM_H)

#TODO
#cmakedefine _LARGEFILE64_SOURCE
#cmakedefine TCL_WIDE_INT_IS_LONG

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/include/togl_config.h.in ${CMAKE_CURRENT_BINARY_DIR}/include/togl_config.h)
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/include/config.h.in ${CMAKE_CURRENT_BINARY_DIR}/include/config.h)

SET(TOGL_PKGNAME Togl)
SET(TOGL_PKGVERSION "2.1")

ADD_SUBDIRECTORY(include)
ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(demo)

# Create the pkgIndex.tcl file.
GET_TARGET_PROPERTY(TOGL_LIBLOCATION togl LOCATION_${CMAKE_BUILD_TYPE})
GET_FILENAME_COMPONENT(TOGL_LIBNAME ${TOGL_LIBLOCATION} NAME)
FILE(WRITE ${CMAKE_CURRENT_BINARY_DIR}/pkgIndex.tcl "package ifneeded ${TOGL_PKGNAME} ${TOGL_PKGVERSION} [list load [file join $dir .. .. ${LIB_DIR} ${TOGL_LIBNAME}] togl]")
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/pkgIndex.tcl DESTINATION lib/${TOGL_PKGNAME}${TOGL_PKGVERSION})

FILE(WRITE ${CMAKE_BINARY_DIR}/lib/${TOGL_PKGNAME}${TOGL_PKGVERSION}/pkgIndex.tcl "package ifneeded ${TOGL_PKGNAME} ${TOGL_PKGVERSION} [list load [file join $dir ${CMAKE_LIBRARY_OUTPUT_DIRECTORY} ${TOGL_LIBNAME}] ${TOGL_PKGNAME}]")
