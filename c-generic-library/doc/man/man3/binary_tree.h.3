.TH "/Users/matthieuriolo/Downloads/libgenc/branches/riolo/trunk/include/binary_tree.h" 3 "Wed Jan 11 2012" ""c generic library"" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Users/matthieuriolo/Downloads/libgenc/branches/riolo/trunk/include/binary_tree.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'gen/data_types.h'\fP
.br
\fC#include 'gen/gen_macros.h'\fP
.br
\fC#include 'gen/function_macros.h'\fP
.br
\fC#include 'gen/function_signatures.h'\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBBINARYTREE_DEFINED\fP"
.br
.ti -1c
.RI "#define \fBconvert_BinaryTree\fP(A, B, C, D)   insert_BinaryTree((A),(B),(C),(D))"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fB_ptr_struct\fP \fBBinaryTree\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int8_t \fBdelete_BinaryTree\fP (\fBBinaryTree\fP *tree, void *\fBobj\fP, size_t \fBobjsize\fP)"
.br
.ti -1c
.RI "void * \fBfind_BinaryTree\fP (\fBBinaryTree\fP *tree, void *\fBobj\fP, size_t \fBobjsize\fP)"
.br
.ti -1c
.RI "void * \fBmax_BinaryTree\fP (\fBBinaryTree\fP *tree)"
.br
.ti -1c
.RI "void * \fBmin_BinaryTree\fP (\fBBinaryTree\fP *tree)"
.br
.ti -1c
.RI "\fBiter_proto\fP (next, BinaryTreeDFS)"
.br
.ti -1c
.RI "\fBiter_proto\fP (destroy, BinaryTreeDFS)"
.br
.ti -1c
.RI "\fBiter_proto\fP (head, BinaryTreeDFS)"
.br
.ti -1c
.RI "\fBiter_proto\fP (tail, BinaryTreeDFS)"
.br
.ti -1c
.RI "\fBiter_proto\fP (retrieve, BinaryTreeDFS)"
.br
.ti -1c
.RI "\fBiter_proto\fP (next, BinaryTreeBFS)"
.br
.ti -1c
.RI "\fBiter_proto\fP (destroy, BinaryTreeBFS)"
.br
.ti -1c
.RI "\fBiter_proto\fP (head, BinaryTreeBFS)"
.br
.ti -1c
.RI "\fBiter_proto\fP (tail, BinaryTreeBFS)"
.br
.ti -1c
.RI "\fBiter_proto\fP (retrieve, BinaryTreeBFS)"
.br
.ti -1c
.RI "int8_t \fBassign_BinaryTreeDFSIter\fP (\fBBinaryTreeDFSIter\fP *iter, \fBBinaryTree\fP *\fBobj\fP)"
.br
.ti -1c
.RI "int8_t \fBassign_BinaryTreeBFSIter\fP (\fBBinaryTreeBFSIter\fP *iter, \fBBinaryTree\fP *\fBobj\fP)"
.br
.ti -1c
.RI "\fBBinaryTreeBFSIter\fP * \fBcreate_BinaryTreeBFSIter\fP (\fBBinaryTree\fP *\fBobj\fP)"
.br
.ti -1c
.RI "\fBBinaryTreeDFSIter\fP * \fBcreate_BinaryTreeDFSIter\fP (\fBBinaryTree\fP *\fBobj\fP)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "void * \fBobj\fP"
.br
.ti -1c
.RI "void size_t \fBobjsize\fP"
.br
.ti -1c
.RI "void size_t int \fBflag\fP"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define BINARYTREE_DEFINED"
.PP
Definition at line 25 of file binary_tree.h.
.SS "#define convert_BinaryTree(A, B, C, D)   insert_BinaryTree((A),(B),(C),(D))"
.PP
Definition at line 41 of file binary_tree.h.
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fB_ptr_struct\fP \fBBinaryTree\fP"
.PP
Definition at line 26 of file binary_tree.h.
.SH "Function Documentation"
.PP 
.SS "int8_t assign_BinaryTreeBFSIter (\fBBinaryTreeBFSIter\fP * iter, \fBBinaryTree\fP * obj)"
.PP
Definition at line 365 of file binary_tree.c.
.SS "int8_t assign_BinaryTreeDFSIter (\fBBinaryTreeDFSIter\fP * iter, \fBBinaryTree\fP * obj)"
.PP
Definition at line 389 of file binary_tree.c.
.SS "\fBBinaryTreeBFSIter\fP* create_BinaryTreeBFSIter (\fBBinaryTree\fP * obj)"
.PP
Definition at line 425 of file binary_tree.c.
.SS "\fBBinaryTreeDFSIter\fP* create_BinaryTreeDFSIter (\fBBinaryTree\fP * obj)"
.PP
Definition at line 400 of file binary_tree.c.
.SS "int8_t delete_BinaryTree (\fBBinaryTree\fP * tree, void * obj, size_t objsize)"
.PP
Definition at line 154 of file binary_tree.c.
.SS "void* find_BinaryTree (\fBBinaryTree\fP * tree, void * obj, size_t objsize)"
.PP
Definition at line 245 of file binary_tree.c.
.SS "iter_proto (tail, BinaryTreeBFS)"
.SS "iter_proto (retrieve, BinaryTreeBFS)"
.SS "iter_proto (destroy, BinaryTreeBFS)"
.SS "iter_proto (next, BinaryTreeBFS)"
.SS "iter_proto (tail, BinaryTreeDFS)"
.SS "iter_proto (retrieve, BinaryTreeDFS)"
.SS "iter_proto (destroy, BinaryTreeDFS)"
.SS "iter_proto (head, BinaryTreeBFS)"
.SS "iter_proto (next, BinaryTreeDFS)"
.SS "iter_proto (head, BinaryTreeDFS)"
.SS "void* max_BinaryTree (\fBBinaryTree\fP * tree)"
.PP
Definition at line 291 of file binary_tree.c.
.SS "void* min_BinaryTree (\fBBinaryTree\fP * tree)"
.PP
Definition at line 303 of file binary_tree.c.
.SH "Variable Documentation"
.PP 
.SS "void size_t int \fBflag\fP"
.PP
Definition at line 40 of file binary_tree.h.
.SS "void* \fBobj\fP"
.PP
Definition at line 40 of file binary_tree.h.
.SS "void size_t \fBobjsize\fP"
.PP
Definition at line 40 of file binary_tree.h.
.SH "Author"
.PP 
Generated automatically by Doxygen for 'c generic library' from the source code.
