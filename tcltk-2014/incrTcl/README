========================================================================
        Copyright (c) 1993-1998   Lucent Technologies, Inc.
        Copyright (c) 1998-2000   Cadence Design Systems, Inc.
========================================================================

 OVERVIEW
------------------------------------------------------------------------
 - What is [incr Tcl]?
 - Getting started
 - Installation
 - Integrating [incr Tcl] with other extensions
 - Acknowledgements
------------------------------------------------------------------------


 What is [incr Tcl]?
------------------------------------------------------------------------
 [incr Tcl] is an object-oriented extension of the Tcl language.  It
 was created to support more structured programming in Tcl.  Tcl scripts
 that grow beyond a few thousand lines become extremely difficult to
 maintain.  This is because the building blocks of vanilla Tcl are
 procedures and global variables, and all of these building blocks
 must reside in a single global namespace.  There is no support for
 protection or encapsulation.

 [incr Tcl] introduces the notion of objects.  Each object is a bag
 of data with a set of procedures or "methods" that are used to
 manipulate it.  Objects are organized into "classes" with identical
 characteristics, and classes can inherit functionality from one
 another.  This object-oriented paradigm adds another level of
 organization on top of the basic variable/procedure elements, and
 the resulting code is easier to understand and maintain.

 Among other things, [incr Tcl] can be used to create new widgets that
 look and work like the usual Tk widgets, but are written entirely at
 the Tcl language level (C code is optional).  These "mega-widgets"
 can be created using [incr Tk], a set of base classes which provide
 the core mega-widget functionality.  [incr Widgets] is a set of
 high-level mega-widgets built using [incr Tk].  It has more than
 50 widget classes, and can be used right out of the box to create:

   - fileselectiondialog
   - tabnotebook
   - panedwindow
   - scrolledhtml
   - combobox
   - optionmenu
   - scrolledlistbox
   - scrolledframe
   - messagedialog
   - and many others...
 
 Classes and/or related procedures can also be encapsulated in their
 own "namespace".  A namespace is a collection of commands, variables,
 classes and other namespaces that is set apart from the usual global
 scope.  Elements within a namespace can be "private" or "protected",
 so that access to them is restricted.  An "import" command allows all
 of the elements from one namespace to be integrated into another.

 Extension writers will immediately see the benefit of namespaces.
 With vanilla Tcl, each extension must add its commands and variables
 at the global scope.  Extension writers are encouraged to add a unique
 prefix to all of the names in their package, to avoid naming collisions.
 Extensions can now sit in their own namespace of commands and variables,
 and sensitive elements can be protected from accidental access.  For
 example, the current release of [incr Tcl] has a namespace "itcl"
 for object-oriented support, a namespace "itk" for mega-widget
 support, and a namespace "iwidgets" for the [incr Widgets] package.
 Each of these namespaces has its own collection of commands and
 variables.  Developers can then pick and choose among the extensions,
 and integrate the parts that they need for their application by
 importing various namespaces at the global scope.


 Getting started
------------------------------------------------------------------------
 If you're just getting started with [incr Tcl], check out these
 useful resources:

   - FREE TUTORIAL on our web site:  http://www.tcltk.com/itcl/

   - BOOK:  "[incr Tcl/Tk] from the Ground Up," by Chad Smith
            (ISBN 0-07-212106-8)

   - BOOK:  "Tcl/Tk Tools," edited by Mark Harrison
            (ISBN 1-56592-218-2)

 Also, run the "catalog" demo to get an overview of the [incr Widgets]
 package.  On Windows and Macintosh systems, this is installed as one
 of the executables.  On Unix systems, this is installed in the
 "lib/itcl/iwidgets3.0.0/demos" library directory.

 The file "iwidgets3.0.0/doc/iwidgets.ps" contains a tutorial
 introduction to the [incr Widgets] package.  The mega-widget classes
 in [incr Widgets] show off most of the functionality in this release.
 You can use them as a pattern to create your own widget classes.

 If you're a seasoned itcl professional, check the CHANGES file for a
 summary of recent enhancements.  Consult the man pages for detailed
 information on particular commands.

 Check out our web site for the latest news:

      http://incrtcl.sourceforge.net/


 Acknowledgements
------------------------------------------------------------------------
 Thanks to Chad Smith for writing an excellent, comprehensive
 book "[incr Tcl/Tk] from the Ground Up," for many helpful bug
 reports, and for nudging me along to fix things.

 Thanks to Matt Newman for providing the Tcl-only "tcl++" package
 that helped so many people move forward while waiting for the
 itcl3.0 release.

 Thanks to John Ousterhout and the Scriptics team for bundling this
 package with their TclPro product.  It's gratifying to see [incr Tcl]
 accepted as a mainstream product.

 Thanks to Mark Ulferts, Sue Yockey, John Sigler, Bill Scott, Alfredo
 Jahn, Bret Schuhmacher, Tako Schotanus and Kris Raney for building
 the [incr Widgets] package.  With a sketchy overview and a crappy
 prototype of [incr Tk], they managed to build a nice set of mega-widgets.
 Their initial designs helped me smooth out the rough spots in [incr Tk].
 Thanks especially to Mark Ulferts for keeping things up over the past
 few years, and for streamlining the package for itcl3.0.

 Thanks to Jan Nijtmans, Karel Zuiderveld, and Vince Darley for helping
 to keep up with Tcl/Tk releases, and for supporting the "plus" and
 "dash" patches under [incr Tcl].

 Thanks to Forest Rouse and ICEM CFD Engineering for integrating
 [incr Tcl] into their Tcl/Tk compiler.  This is a large undertaking,
 and they have done an excellent job.

 Thanks to Alfredo Jahn and Bret Schuhmacher at WebNet for helping
 to create the [incr Tcl] web site, and for maintaining the
 [incr Tcl] mailing list for many years.

 Thanks to extension writers like Mark Diekhans (tclX) and Ioi Lam (Tix)
 for making their packages compatible with [incr Tcl].

 Thanks to George Howlett for teaching me how namespaces should really
 work.  He has been a constant source of inspiration, and has kept
 a careful watch against many bad ideas.  Jim Ingham fleshed out the
 notion of explicit scoping, added many nice features to [incr Tk],
 and has helped tremendously with porting.  Lee Bernhard worked on
 distributed systems with Iclient/Iserver, and also helped with porting.
 Bill Scott, with a steady stream of bug reports, helped me understand
 the questions that a typical user might have.  He forced me to reinvent
 the paradigm on more than one occasion.

 Thanks to all of the alpha-testers that helped me polish this release.

 Thanks to Mark Harrison for his enthusiasm and support.  Due in
 large part to his evangelism, I have been able to make [incr Tcl]
 development a mainstream activity.

 And many thanks to my wife Maria and my children Maxwell and Katie
 for putting up with all of this.

--Michael
. . . . . . . . . . . . . . . . .                  ---_-----------
                                . . . . . . . . . | c a d e n c e |
      Michael McLennan          .                  ---------------
      mmc@cadence.com           .      Cadence Design Systems, Inc.
      phone: 610-398-6348       .      7535 Windsor Dr. Suite A-200
        fax: 610-530-7985       .      Allentown, PA  18195
