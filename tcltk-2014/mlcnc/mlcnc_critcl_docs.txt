
TCLCMD: mlcnc_find_line_intersection x1 y1 x2 y2  x3 y3 x4 y4

  Finds the intersection point for the two given line lines, defined
    by the line segments (x1,y1) (x2,y2) and (x3,y3) (x4,y4).
    This will project the segments out to see where they would join
    if they don't join within the line segments.

  Returns {} if the lines are parallel or identical.  Otherwise,
    returns a list containing the X and Y coords of the intersection.


TCLCMD: mlcnc_lines_intersect x1 y1 x2 y2  x3 y3 x4 y4

  Returns true if the two given line segments (x1,y1) (x2,y2) and
    (x3,y3) (x4,y4) intersect.  This will only return true if the
    lines intersect within the line segments.


TCLCMD: mlcnc_line_dist_from_point x1 y1  x2 y2  px py

  Returns the absolute closest distance (FP double) that the point (px,py) is
    from the line segment (x1,y1) (x2,y2).  This does not extend the line
    for purposes of the calculation.


TCLCMD: mlcnc_points_are_collinear x1 y1  x2 y2  x3 y3

  Returns true if the three given points (x1,y1) (x2,y2) and (x3,y3) are
    collinear (in a straight line) to within 1e-10 units.


TCLCMD: mlcnc_path_min_dist_from_point path px py

  Returns the absolute closest distance (FP double) that the point (px,py) is
    from the path given.  The path is a list of alternating X and Y
    coordinates.


TCLCMD: mlcnc_max_consecutive_path_point_dist path

  Returns the distance of the most distant consecutive points in the given path.
    The path is a list of alternating X and Y coordinates.
    The return value is a double, containing the distance.


TCLCMD: mlcnc_closest_point_on_path path px py

  Returns the closest explicit point in the path to the given point (px,py).
    The path is a list of alternating X and Y coordinates.
    The return value is a two item list with the X and Y coordinate
    of the closest point in the path.  This does not interpolate lines,
    but only finds the closest point in the path list.


TCLCMD: mlcnc_path_remove_repeated_points path

  Returns the input path list after removing  all duplicate
    consecutive X-Y coords.


TCLCMD: mlcnc_path_circumscribes_point path x y

  Returns true if the given closed path circumscribes the given x,y coords.


TCLCMD: mlcnc_path_find_line_segment_intersections path x0 y0 x1 y1

  Finds all the intersections of the given path with the given line segment.
  Returns a list with segment number (0 based), x, and y, triplets for each
    intersection.  ie: a line that intersected a path at (2.0,1.5) in the
    first segment of the path, and at (-1.1,0.9) in the third segment would
    return the list: {0 2.0 1.5 2 -1.1 0.9}


TCLCMD: mlcnc_path_find_self_intersections path

  Finds all the intersections of the given path with itself.
  Returns a list with both segment numbers (0 based), x, and y quartets
    for each intersection.  ie: The path {0 0  1 1  2 0  2 1  1 0  0 1}
    would return the list: {0 4 0.5 0.5  1 3 1.5 0.5} which translates as
    There is an intersection of segments 0 and 4 at 0.5, 0.5 and an
    intersection of segments 1 and 3 at 1.5, 0.5.


TCLCMD: mlcnc_path_find_path_intersections path1 path2

  Finds all the intersections of the two given polygon paths.
  Returns a list with both segment numbers (0 based), x, and y quartets
    for each intersection.  ie: The paths {0 0  1 1  2 0} & {0 1  2 1  1 0}
    would return the list: {0 2 0.5 0.5  1 1 1.5 0.5} which translates as:
      Segment 0 of path 1 and seg 2 of path2 intersect at 0.5, 0.5.  Also,
      segment 1 of path 1 and seg 1 of path2 intersect at 1.5, 0.5.


TCLCMD: mlcnc_bezier_nearest_point_to_point bezpath px py

  Returns an array with the distance, x-y position, segment number, and
    t value of the closest point on the given bezier path to the given
    point px,py.


TCLCMD: mlcnc_path_insert_path_intersections path1 path2

  Finds all the intersections of the two given polygon paths.
  Returns the two paths in a list, with new points added where the two
    paths intersected.

